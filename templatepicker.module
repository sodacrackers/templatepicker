<?php
/**
 * @file
 * 
 * Speech and Hearing custom module. 
 * 
 * Enables choosing a particular template when editing a node. 
 * An alternative if your site needs theming for the whole page, 
 * rather than setting a per-node template.  
 * 
 * @link: https://www.drupal.org/coding-standards/docs
 * @link: https://www.drupal.org/project/template_picker
 * @link: https://www.drupal.org/sandbox/Demoshane/2005030
 * 
 * 
 * 
 */


function templatepicker_permission() {

	$node_types = node_permissions_get_configured_types() ; 

	foreach ($node_types as $type) {

		$info = node_type_get_type($type);
		$type = check_plain($info->type);

		$permissions["can choose $type templates"] = array(
			'title' => t('%type_name: Enable picking templates on edit form', array('%type_name' => $info->name)),
		);
		
	}

	return $permissions;

}


function templatepicker_preprocess_page(&$variables) {

	$node_id = arg(1);

	if(arg(0) === 'node' && is_numeric($node_id)) {
		$template = _templatepicker_get_choosen_template($node_id, 'page');
	}

	if (!empty($template['template'])) {

		// Drupal likes these underscored and without an extension, like 'page__somefilename' 
		$clean = str_replace('-', '_', basename($template['template'], '.tpl.php'));
		$variables['theme_hook_suggestions'][] = $clean;
	}

}


function templatepicker_form_node_form_alter(&$form, &$form_state, $form_id) {


	$node_id = $form['nid']['#value']; 
	$type = $form['#node']->type;

	if (!user_access("can choose $type templates")) {
		return; 
	}

	$form['templatepicker'] = array(
		'#type' => 'fieldset',
		'#title' => t('Template Picker'),
		//'#access' => $access,
		'#collapsible' => TRUE,
		'#collapsed' => TRUE,
		'#group' => 'additional_settings',
		'#weight' => 0,
		'#tree' => TRUE,
		'#attributes' => array(
			'class' => array('tp-form'),
		),
		'#attached' => array(
			'js' => array(
				//drupal_get_path('module', 'templatepicker') . '/templatepicker.js',
			),
		),
	);

	$templates = _templatepicker_get_templates('page'); 
	$default_value = _templatepicker_get_choosen_template($node_id, 'page');

	$form['templatepicker']['page_template'] = array(
		'#type' => 'select',
		'#title' => t('Template'),
		'#description' => t('Select a template for this content.'),
		'#options' => $templates,
		'#default_value' => $default_value,
	);

	$form['actions']['submit']['#submit'][] = 'templatepicker_form_submit';
	
}


function templatepicker_form_submit($form, &$form_state) {

	$node_id = $form_state['nid'];
	$template = $form_state['values']['templatepicker']['page_template'];

	_templatepicker_set_chosen_template($node_id, $template, 'page');

}


function _templatepicker_set_chosen_template($node_id, $template, $type = 'page') {

	db_delete('templatepicker')
		->condition('nid', $node_id)
		->condition('type', $type)
		->execute();

	if(!empty($template)) {

		db_insert('templatepicker')
			->fields(
				array('nid' => $node_id, 'type' => $type, 'template' => $template,)
			)
			->execute();
	}
	
}


function _templatepicker_get_choosen_template($node_id, $type = 'page') {

	$result = db_select('templatepicker', 'tp')
		->condition('nid', $node_id)
		->fields('tp', array('template'))
		->execute()
		->fetchAssoc();

	return $result; 

}



function _templatepicker_get_templates() {

	$templates = array('' => t('Default template'));
	$other_templates = array(); 

	$path = DRUPAL_ROOT . '/' . drupal_get_path('theme', variable_get('theme_default'));
	$iterator = new RecursiveDirectoryIterator($path);
	$iterator_iterator = new RecursiveIteratorIterator($iterator);

	// Detect templates in your theme like 'page--content_type.tpl.php' 
	$regex_iterator = new RegexIterator($iterator_iterator, '/page.?\.tpl\.php$/i', RecursiveRegexIterator::GET_MATCH);
	$templates_found = iterator_to_array($regex_iterator, TRUE);


	foreach ($templates_found as $key => $array) {

		// Add choices to template-picker list  
		$filename = basename($key); 
		$other_templates[$filename] = $filename; 

		if (is_file($key)) {

			// Look for a friendly name in file comments, like 
			// Template name: Template 22
			$file_contents = implode('', file($key));
			
			if (preg_match('/(?:Template Name:)(.*)$/mi', $file_contents, $result)) {
				$clean_name = trim($result[1]);
			}
			else {
				$clean_name = strtoupper(str_replace(array('-', '_', '.tpl.php'), ' ', $filename));
			}

			$other_templates[$filename] = $clean_name;

		}
	}

	asort($other_templates);
	return array_merge($templates, $other_templates);

}


